# See: https://help.github.com/en/actions/reference/software-installed-on-github-hosted-runners
# 2020-06-22 - slg - customized
# 2020-06-27 - slg - expanded to G++ for MacOS
# 2020-07-03 - slg - ported to be13_api; removed python (be13_api doesn't use python)
# 2022-02-10 - slg - renamed be20_api. Our work here is done.

name: BE20_API CI (c++17)
on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['macos-latest','ubuntu-latest' ]

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install MacOS dependencies
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install autoconf automake libtool abseil pkg-config pcre re2

      - name: Install Ubuntu dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo bash etc/CONFIGURE_UBUNTU22.bash
          sudo apt install -y lcov

      - name: Update autoconf on Ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |

      - name: run bootstrap
        run: |
          bash bootstrap.sh

      - name: configure for ubuntu with codecov
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          ./configure --disable-opt --enable-address-sanitizer CFLAGS='-g -O0 -fprofile-arcs -ftest-coverage' CXXFLAGS='-g -O0 -fprofile-arcs -ftest-coverage' LIBS='-lgcov'

      - name: configure for macOS
        if: startsWith(matrix.os, 'macos')
        run: |
          ./configure --enable-maintainer-mode --enable-address-sanitizer --disable-opt --enable-silent-rules

      - name: make check
        run: |
          make test_be20_api
          ./test_be20_api
          make check  || (for fn in test*.log ; do echo ""; echo $fn ; cat $fn ; done; exit 1)

      - uses: ammaraskar/gcc-problem-matcher@master
        name: GCC Problem Matcher

      - name: list files
        run: |
          find . -ls

      - name: Generate coverage report
        run: |
          lcov --capture --directory . --output-file coverage.info
          #lcov --remove linux-coverage.info '/usr/*' --output-file linux-coverage.info
          lcov --list coverage.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: coverage.info
          flags: unittests
          name: sleuthkit-codecov
