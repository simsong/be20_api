name: BE20_API CI (c++17)
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['macos-latest','ubuntu-latest','windows-latest']

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # ----------------------------
      # MacOS
      # ----------------------------
      - name: Install MacOS dependencies
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install autoconf automake libtool abseil pkg-config pcre re2

      # ----------------------------
      # Ubuntu
      # ----------------------------
      - name: Install Ubuntu dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update -y
          sudo apt install -y autoconf automake g++ libtool libssl-dev libabsl-dev libre2-dev pkg-config make pkg-config zlib1g-dev

      # ----------------------------
      # Windows (MSYS2 UCRT64)
      # ----------------------------
      - name: Setup MSYS2
        if: startsWith(matrix.os, 'windows')
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ucrt64
          path-type: inherit

      - name: Install Windows dependencies
        if: startsWith(matrix.os, 'windows')
        shell: msys2 {0}
        run: |
          bash etc/CONFIGURE_WINDOWS_LATEST.bash

      # ----------------------------
      # Posix Bootstrap
      # ----------------------------
      - name: run bootstrap
        shell: ${{ startsWith(matrix.os, 'windows') && 'msys2 {0}' || 'bash' }}
        run: |
          autoreconf -fi
          bash bootstrap.sh

      # ----------------------------
      # Configure for each OS
      # ----------------------------
      - name: configure for ubuntu with codecov
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          ./configure --disable-opt --enable-address-sanitizer \
            CFLAGS='-g -O0 -fprofile-arcs -ftest-coverage' \
            CXXFLAGS='-g -O0 -fprofile-arcs -ftest-coverage' \
            LIBS='-lgcov'

      - name: configure for macOS
        if: startsWith(matrix.os, 'macos')
        run: |
          ./configure --enable-maintainer-mode --enable-address-sanitizer --disable-opt --enable-silent-rules

      - name: configure for windows (ucrt64)
        if: startsWith(matrix.os, 'windows')
        shell: msys2 {0}
        run: |
          ./configure --prefix=/ucrt64

      # ----------------------------
      # Common build + test
      # ----------------------------
      - name: make check
        shell: ${{ startsWith(matrix.os, 'windows') && 'msys2 {0}' || 'bash' }}
        run: |
          make test_be20_api || true
          ./test_be20_api   || true
          make check  || (for fn in test*.log ; do echo ""; echo $fn ; cat $fn ; done; exit 1)

      - uses: ammaraskar/gcc-problem-matcher@master
        name: GCC Problem Matcher

      - name: list files
        run: |
          find . -ls

      - name: Generate coverage report
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          lcov --capture --directory . --output-file coverage.info
          #lcov --remove linux-coverage.info '/usr/*' --output-file linux-coverage.info
          lcov --list coverage.info

      - name: Upload coverage to Codecov
        if: startsWith(matrix.os, 'ubuntu')
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: coverage.info
          flags: unittests
          name: sleuthkit-codecov
